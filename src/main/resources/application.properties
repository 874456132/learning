# server port
server.port=9905
server.context-path=/heima

# REDIS (RedisProperties)  https://docs.spring.io/spring-boot/docs/1.5.7.RELEASE/reference/htmlsingle/#boot-features-connecting-to-redis
spring.data.redis.repositories.enabled=true
spring.redis.client-type=jedis
# Maximum number of redirects to follow when executing commands across the cluster.
spring.redis.cluster.max-redirects=3
# Comma-separated list of "host:port" pairs to bootstrap from.
spring.redis.cluster.nodes=127.0.0.1:6389
# Database index used by the connection factory.
spring.redis.database=0
# Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
# spring.redis.url=
#Redis server host.
# spring.redis.host=
# Login password of the redis server.
spring.redis.password=bliss@2022
# Enable SSL support.
spring.redis.ssl=false
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=0
# Redis server port.
# spring.redis.port=
# Name of Redis server.
# spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
# spring.redis.sentinel.nodes=
# Read timeout
spring.redis.timeout=1000
# Connection timeout
spring.redis.connect-timeout=6000