# server port
server.port=9905
spring.profiles.active=standalone
# Context path of the application.
server.servlet.context-path=/heima

# REDIS (RedisProperties)  https://docs.spring.io/spring-boot/docs/1.5.7.RELEASE/reference/htmlsingle/#boot-features-connecting-to-redis
# spring.data.redis.repositories.enabled=true

# \u6307\u5B9A\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF \u9ED8\u8BA4\u4E3A
spring.redis.client-type=jedis

# Login username of the redis server.
# spring.redis.username=
# Login password of the redis server.
spring.redis.password=bliss@2022
# Enable SSL support.StringRedisTemplate
spring.redis.ssl=false
# Read timeout
spring.redis.timeout=1000
# Connection timeout
spring.redis.connect-timeout=6000
# Database index used by the connection factory.
spring.redis.database=0



# standalone mode \u5355\u673A\u6A21\u5F0F\u914D\u7F6E
# Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
spring.redis.url=
# Redis server host.
spring.redis.host=127.0.0.1
# Redis server port.
spring.redis.port=6379

# sentinel mode \u54E8\u5175\u6A21\u5F0F\u914D\u7F6E
# Name of Redis server.
# spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
# spring.redis.sentinel.nodes=

# connection pool mode \u8FDE\u63A5\u6C60\u914D\u7F6E
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=0

# cluster mode \u96C6\u7FA4\u6A21\u5F0F\u914D\u7F6E
# Comma-separated list of "host:port" pairs to bootstrap from.
# spring.redis.cluster.nodes=127.0.0.1:6389
# Maximum number of redirects to follow when executing commands across the cluster.
# spring.redis.cluster.max-redirects=3

# cache \u7F13\u5B58
# \u7F13\u5B58\u7C7B\u578B
spring.cache.type=redis
# \u6307\u5B9A\u7F13\u5B58\u540D\u79F0
spring.cache.cache-names=DATA
# \u662F\u5426\u5141\u8BB8\u7F13\u5B58value\u503C\u4E3A\u7A7A
spring.cache.redis.cache-null-values=false
# \u662F\u5426\u542F\u7528\u7F13\u5B58key\u524D\u7F00
spring.cache.redis.use-key-prefix=true
# \u7F13\u5B58key\u524D\u7F00
spring.cache.redis.key-prefix=REDIS:CACHE:
# \u7F13\u5B58\u6570\u636E\u8FC7\u671F\u65F6\u95F4\uFF0C\u6BEB\u79D2\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6761\u76EE\u6C38\u4E0D\u8FC7\u671F\u3002
spring.cache.redis.time-to-live=-1
# \u662F\u5426\u542F\u7528\u7F13\u5B58\u7EDF\u8BA1\u3002
spring.cache.redis.enable-statistics=false


